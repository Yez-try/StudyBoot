## 개발환경용

##DB정보
spring.profiles.include=secret

# 주석
# key=value

# 실제로 실행할 때는 operator를 실행하세요
## 활성화할 프로파일 설정
#spring.profiles.active=operator

## 다른 properties 파일 import 하기 
#### profile명을 작성해준다 // application-{profile명}.properties
#spring.profiles.include=secret

server.port=81

## web.xml encoding-filter 부분 : 요청이 발생하면 web.xml을 읽고 준비된 DS가 받는다. 필터는 DS로 들어오기 전에 인터셉터처럼 거치게 된다.
server.servlet.encoding.charset=UTF-8

# 사용자 생성 키
my.message.hi=hello
my.default = default

########################################### Log 설정
### 전역 레벨 설정
logging.level.root=info
### Web 요청 발생 Log : 들어오는 요청을 찍어준다.
logging.level.org.springframework.web=info 
### 특히 POST로 넘어오는 파라미터 출력
spring.mvc.log-request-details=true
#logging.level.com.iu.home.board.qna.QnaMapper=debug

## SQL LOG
logging.level.jdbc=OFF
logging.level.jdbc.sqlonly=OFF           
logging.level.jdbc.sqltiming=info       
logging.level.jdbc.audit=OFF             
logging.level.jdbc.resultset=OFF         
logging.level.jdbc.resultsettable=info  
logging.level.jdbc.connection=OFF            
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=OFF
logging.level.javax.sql.DataSource=off


## Mapper, Config 설정
####classpath는 resources폴더를 의미한다.
mybatis.mapper-locations=classpath:database/mappers/*Mapper.xml
mybatis.config-location=classpath:database/config/config.xml


######################## Transaction 관리\
#### service 에 @transactional 사용시
#### Service class 가 부모 없이 단독 사용시 에러를 방지한다.
spring.aop.proxy-target-class=true 


########################################### JSP
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

########################################### FileUpload
## Multipart 사용 여부
spring.servlet.multipart.enabled=true
## 파일 하나당 최대 크기 설정
spring.servlet.multipart.max-file-size=10MB
## 총 파일 최대 크기 설정
spring.servlet.multipart.max-request-size=50MB

## 저장 폴더
#### 업로드 경로
my.upload.file=D:/result/upload/
#### 요청 경로
my.upload.base=file:///result/upload/
my.url.path=/file/**


#######Message 설정
## message 파일의 위치와 이름 => 폴더명/파일명
## messages/message로 시작하는 모든 파일 
spring.messages.basename=messages/message
## Encoding 설정
spring.messages.encoding=UTF-8
## message(key)가 없는 경우
spring.messages.use-code-as-default-message=true
### true : 예외를 발생 시키지 않고 key를 출력
### false : 예외를 발생
## message 파일내용의 변경을 감지하는 시간 간격(초단위) : 그냥 텍스트기 때문에 변경된 내용을 읽지 않는다.
spring.messages.cache-duration=60
