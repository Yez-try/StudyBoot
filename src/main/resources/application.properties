# key=value로 이루어져있음

# 8080이었던 포트 번호를 80으로 변경
server.port=80 

# 사용자 생성 키를 만들수도 있음 (내 임의로)
# 컨트롤러에서 어노테이션을 사용해 @Value("${my.message.hi}") 사용할 수 있다.
my.message.hi=hello 

## Log 설정
### 전역레벨 설정
logging.level.root=info

### 웹요청이 발생할 경우 설정
logging.level.org.springframework.web=info

### 웹요청이 발생한 경우 파라미터 출력
spring.mvc.log-request-details=true


logging.level.com.iu.demo.board.qna.QnaMapper=debug


# MyBatis 설정
## username
spring.datasource.hikari.username=syj
## password
spring.datasource.hikari.password=syj
## url
#spring.datasource.url=jdbc:mariadb://localhost:3306/syj
## driver
spring.datasource.driver=org.mariadb.jdbc.Driver

## sql log를 위한 설정
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mariadb://localhost:3306/syj

# SQL 로그 레벨 출력 설정
## 3 에서 설정할 정보를 application.properties에서 설정
logging.level.jdbc=OFF
logging.level.jdbc.sqlonly=OFF           
#: SQL문만 로깅할지 여부, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문을 출력
logging.level.jdbc.sqltiming=DEBUG       
#: SQL문과 해당 SQL을 실행한 시간 정보(milliseconds)를 포함
logging.level.jdbc.audit=OFF             
#: ResultSet을 제외한 모든 JDBC 호출 정보를 출력, 로그 양이 많아서 특별한 문제가 아니면 사용을 권장하지 않음
logging.level.jdbc.resultset=OFF         
#: ResultSet을 포함한 모든 JDBC 호출 정보를 출력 매우, 방대한 양의 로그가 생성
logging.level.jdbc.resultsettable=INFO  
#: SQL 조회된 결과 데이터를 table형식의 로그로 출력
logging.level.jdbc.connection         
#: connection open close 로깅 여부
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=OFF
logging.level.javax.sql.DataSource=INFO


## Mapper, Config 설정
####classpath는 resources폴더를 의미한다.
mybatis.mapper-locations=classpath:database/mappers/*Mapper.xml
mybatis.config-location=classpath:database/config/config.xml

########Jsp 설정
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp





########## file업로드 설정
###기존
## Multipart 사용 여부
spring.servlet.multipart.enabled=true
## 파일하나당 최대크기 설정
spring.servlet.multipart.max-file-size=10MB
## 총 최대크기 설정
spring.servlet.multipart.max-request-size=50MB
## 업로드할 파일을 지정해주는 폴더
#spring.servlet.multipart.location=